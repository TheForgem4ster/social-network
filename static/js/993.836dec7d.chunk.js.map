{"version":3,"file":"static/js/993.836dec7d.chunk.js","mappings":"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","sources":["webpack://social-network/./src/componets/Profile/ProfileInfo/Profile.module.css?8d96","componets/Profile/ProfileInfo/ProfileStatus.jsx","componets/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/componets/Profile/MyPost/Post/Post.module.css?3eea","componets/Profile/MyPost/Post/Post.jsx","webpack://social-network/./src/componets/Profile/MyPost/MyPost.module.css?2196","componets/Profile/MyPost/MyPost.jsx","componets/Profile/MyPost/MyPostContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"Profile_descriptionBlock__qLpEN\"};","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n       this.setState({\r\n           status: e.currentTarget.value,\r\n       })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status)\r\n        {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"None status\"}</span>\r\n                    </div>}\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}\r\n                               value={this.state.status} onBlur={this.deactivateEditMode} autoFocus={true}/>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"None status\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n    return(\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                avatar + description\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"iteam\":\"Post_iteam__vcdzJ\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.iteam}>\r\n      <img src=\"https://avatars.mds.yandex.net/get-kino-vod-films-gallery/28788/47e2fd514411e18b76af786d7417062d/100x64_3\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPost_postBlock__HUuWM\",\"post\":\"MyPost_post__qRVUn\"};","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPost.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 =  maxLengthCreator(10);\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post message\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    console.log(\"her\");\r\n    let postElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCounter} key={p.id}/>)\r\n\r\n    let newPostText = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPost;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost)\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <main>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostContainer />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {\r\n    Navigate,\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.isAuth){\r\n            return <Navigate to={\"/login\"}/>\r\n        }\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)\r\n"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","onChange","e","currentTarget","onBlur","updateStatus","profile","className","s","src","photos","large","Preloader","message","likeCount","maxLength10","maxLengthCreator","MyPost","console","log","postElements","posts","map","p","likeCounter","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","isAuth","to","compose","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}